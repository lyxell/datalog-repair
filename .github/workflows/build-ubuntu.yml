name: Ubuntu build

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - run: git describe --tags --dirty --match 'v*'
    - name: Install dependencies
      run: |
          sudo apt install -y re2c mcpp patchutils
    - name: Configure CMake
      run: | 
          cmake -DSOUFFLE_USE_SQLITE=OFF -DSOUFFLE_USE_ZLIB=OFF -DSOUFFLE_FAST_RELEASE=OFF -DSOUFFLE_FAST_DEBUG=OFF -B${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Test
      run: cd ${{github.workspace}}/build && ctest -j4 --output-on-failure
    - uses: actions/upload-artifact@v2
      with:
        name: logifix-ubuntu
        path: ${{github.workspace}}/build/logifix

  compile-spoon:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/INRIA/spoon.git
    - run: cd spoon && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all spoon/src/main
    - run: cd spoon && mvn compile

  compile-bytecodeviewer:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/Konloch/bytecode-viewer.git
    - run: cd bytecode-viewer && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all bytecode-viewer/
    - run: cd bytecode-viewer && mvn compile

  compile-spock:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/spockframework/spock.git
    - run: cd spock && ./gradlew build -x test
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all spock/
    - run: cd spock && ./gradlew build -x test

  compile-initializr:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/spring-io/initializr.git
    - run: cd initializr && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all initializr/
    - run: cd initializr && mvn spring-javaformat:apply
    - run: cd initializr && mvn compile

  compile-netty:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: mkdir netty && cd netty && git init && git remote add origin https://github.com/netty/netty.git && git fetch --depth 1 origin b237c87bcc92d6875919a01b2445279dc5c6170c && git checkout b237c87bcc92d6875919a01b2445279dc5c6170c
    - run: cd netty && mvn clean package
    - run: cd netty && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all netty/
    - run: cd netty && mvn compile

  compile-dolphinscheduler:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: mkdir dolphinscheduler && cd dolphinscheduler && git init && git remote add origin https://github.com/apache/dolphinscheduler.git && git fetch --depth 1 origin 14e80ab5fd3a6c068fe168fb76c5b9c836edf113 && git checkout 14e80ab5fd3a6c068fe168fb76c5b9c836edf113 && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all dolphinscheduler/
    - run: cd dolphinscheduler && mvn clean compile

  compile-pitest:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/hcoles/pitest.git
    - run: cd pitest && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all pitest/
    - run: cd pitest && mvn compile

  compile-karate:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/intuit/karate.git
    - run: cd karate && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all karate/
    - run: cd karate && mvn compile

  compile-testng:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/cbeust/testng.git
    - run: cd testng && ./gradlew build -x test
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all testng/
    - run: cd testng && ./gradlew autostyleApply
    - run: cd testng && ./gradlew build -x test
