name: Ubuntu build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    - run: git describe --tags --dirty --match 'v*'
    - name: Install dependencies
      run: |
          sudo apt install -y re2c mcpp patchutils
    - name: Configure CMake
      run: | 
          cmake -DSOUFFLE_USE_SQLITE=OFF -DSOUFFLE_USE_ZLIB=OFF -DSOUFFLE_FAST_RELEASE=OFF -DSOUFFLE_FAST_DEBUG=OFF -B${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Test
      run: cd ${{github.workspace}}/build && ctest -j4 --output-on-failure
    - uses: actions/upload-artifact@v2
      with:
        name: logifix-ubuntu
        path: ${{github.workspace}}/build/logifix
  check-for-compile-errors:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/INRIA/spoon.git
    - run: cd spoon && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all spoon/src/main
    - run: cd spoon && mvn compile

  compile-primefaces:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/primefaces/primefaces.git
    - run: cd primefaces && mvn compile -Dcheckstyle.skip
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all primefaces/
    - run: cd primefaces && mvn compile -Dcheckstyle.skip

  compile-initializr:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/spring-io/initializr.git
    - run: cd initializr && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all initializr/
    - run: cd initializr && mvn spring-javaformat:apply
    - run: cd initializr && mvn compile

  compile-dolphinscheduler:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download logifix
      uses: actions/download-artifact@v2
      with:
        name: logifix-ubuntu
    - run: git clone --depth 1 https://github.com/apache/dolphinscheduler.git
    - run: cd dolphinscheduler && mvn compile
    - run: chmod +x logifix
    - run: ./logifix --in-place --accept-all dolphinscheduler/
    - run: cd dolphinscheduler && mvn compile
