/**
 * Introduce entry by iterating over entrySet instead of keySet.
 */
rewrite("fix_inefficient_map_access", filename, start, end + 1, cat("for (Map.Entry", type_args_str, " entry : ", map_reference_str, ".entrySet()) {\n", param_str, " = entry.getKey();")) :-
    enhanced_for_statement(id, param, expression, body),
        filename_of(id, filename),
        starts_at(id, start),
        starts_at(body, end),

    /* expression is a call to map.keySet() */
    method_invocation(expression, map_reference, "keySet", nil),
    has_map_type(map_reference),

    /* extract map information */
    point_of_declaration(map_reference, decl),
    parent_of(decl, "type", type),
    class_type(type, _, type_args, _),
    string_representation(type_args, type_args_str),

    /* body contains a call to map.get(key) */
    ancestor_of(body, map_get),
    method_invocation(map_get, subject, "get", [key, nil]),
    point_of_declaration(subject, decl),
    point_of_declaration(key, param),

    string_representation(param, param_str),
    string_representation(map_reference, map_reference_str).

/**
 * Use entry.getValue() instead of map.get(key) if available.
 */
rewrite("fix_inefficient_map_access", filename, start, end, cat(formal_param_id_str, ".getValue()")) :-
    enhanced_for_statement(id, formal_param, expression, body),
        filename_of(id, filename),
    formal_parameter(formal_param, _, _, formal_param_id),
    string_representation(formal_param_id, formal_param_id_str),

    /* expression is a call to map.entrySet() */
    method_invocation(expression, map_reference, "entrySet", nil),

    /* extract map information */
    point_of_declaration(map_reference, decl),

    /* body contains a declaration where the value is entry.getKey() */
    block(body, stmts),
    list_contains(stmts, vardecl_statement),
    local_variable_declaration_statement(vardecl_statement, declaration),
    local_variable_declaration(declaration, _, _, [declarator, nil]),
    variable_declarator(declarator, declarator_id, initializer),
    method_invocation(initializer, get_key_subject, "getKey", nil),
    point_of_declaration(get_key_subject, formal_param),
    string_representation(declarator_id, declarator_id_str),

    /* body contains a call to map.get(key) */
    ancestor_of(body, map_get),
    method_invocation(map_get, subject, "get", [key, nil]),
        starts_at(map_get, start),
        ends_at(map_get, end),
    point_of_declaration(subject, decl),
    (string_representation(key, cat(formal_param_id_str, ".getKey()"))
    ;string_representation(key, declarator_id_str)).
