.decl can_have_parentheses_fully_removed(id: id)
can_have_parentheses_fully_removed(id) :- method_invocation(id, _, _, _).
can_have_parentheses_fully_removed(id) :- method_invocation(_, _, _, [id, nil]).
can_have_parentheses_fully_removed(id) :- expression_name(id, _).
can_have_parentheses_fully_removed(id) :- return_statement(_, id).
can_have_parentheses_fully_removed(id) :- conditional_and_expression_unordered(_, id, _), equals_expression(id, _, _).
can_have_parentheses_fully_removed(id) :- conditional_and_expression_unordered(_, id, _), not_equals_expression(id, _, _).
can_have_parentheses_fully_removed(id) :- conditional_and_expression_unordered(_, id, _), less_than_or_equals_expression(id, _, _).
can_have_parentheses_fully_removed(id) :- conditional_or_expression_unordered(_, id, _), equals_expression(id, _, _).
can_have_parentheses_fully_removed(id) :- conditional_or_expression_unordered(_, id, _), not_equals_expression(id, _, _).
can_have_parentheses_fully_removed(id) :- conditional_or_expression_unordered(_, id, _), less_than_or_equals_expression(id, _, _).
can_have_parentheses_fully_removed(id) :- if_statement(_, id, _, _).

rewrite("remove_redundant_parentheses", filename, start, end,
    substr(code, content_start, content_end - content_start)
) :-
    can_have_parentheses_fully_removed(id),
    filename_of(id, filename),
    source_code(_, code),
    starts_at(id, start),
    ends_at(id, end),
    content_starts_at(id, content_start),
    content_ends_at(id, content_end),
    (end - start) - (content_end - content_start) > 0.

rewrite("remove_redundant_parentheses", filename, start, end,
    cat("(", substr(code, content_start, content_end - content_start), ")")
) :-
    !can_have_parentheses_fully_removed(id),
    filename_of(id, filename),
    source_code(_, code),
    starts_at(id, start),
    ends_at(id, end),
    content_starts_at(id, content_start),
    content_ends_at(id, content_end),
    (end - start) - (content_end - content_start) >= 4.
