/* Collections */

/* Pre  [:x].size() == 0 */
/* Post [:x].isEmpty()   */
rewrite_node("simplify_code_using_collection_isempty", id, cat(subject_str, ".isEmpty()")) :-
    equals_expression_unordered(id, invocation, integer),
    method_invocation(invocation, subject, "size", nil),
    _has_type(subject, [package, class, _]),
    (collection_type(package, class);map_type(package, class)),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].size() != 0 */
/* Post ![:x].isEmpty()  */
rewrite_node("simplify_code_using_collection_isempty", id, cat("!", subject_str, ".isEmpty()")) :-
    not_equals_expression_unordered(id, invocation, integer),
    method_invocation(invocation, subject, "size", nil),
    _has_type(subject, [package, class, _]),
    (collection_type(package, class);map_type(package, class)),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].size() > 0 */
/* Post ![:x].isEmpty()  */
rewrite_node("simplify_code_using_collection_isempty", id, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_expression(id, invocation, integer),
    method_invocation(invocation, subject, "size", nil),
    _has_type(subject, [package, class, _]),
    (collection_type(package, class);map_type(package, class)),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].size() >= 1 */
/* Post ![:x].isEmpty()  */
rewrite_node("simplify_code_using_collection_isempty", id, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_or_equals_expression(id, invocation, integer),
    method_invocation(invocation, subject, "size", nil),
    _has_type(subject, [package, class, _]),
    (collection_type(package, class);map_type(package, class)),
    evaluates_to_integer_value(integer, 1),
    string_representation(subject, subject_str).

/* Strings */

/* Pre  [:x].length() == 0 */
/* Post [:x].isEmpty()     */
rewrite_node("simplify_code_using_collection_isempty", id, cat(subject_str, ".isEmpty()")) :-
    equals_expression_unordered(id, invocation, integer),
    method_invocation(invocation, subject, "length", nil),
    _has_type(subject, ["java.lang", "String", nil]),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].length() != 0 */
/* Post ![:x].isEmpty()    */
rewrite_node("simplify_code_using_collection_isempty", id, cat("!", subject_str, ".isEmpty()")) :-
    not_equals_expression_unordered(id, invocation, integer),
    method_invocation(invocation, subject, "length", nil),
    _has_type(subject, ["java.lang", "String", nil]),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].length() > 0 */
/* Post ![:x].isEmpty()   */
rewrite_node("simplify_code_using_collection_isempty", id, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_expression(id, invocation, integer),
    method_invocation(invocation, subject, "length", nil),
    _has_type(subject, ["java.lang", "String", nil]),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].length() >= 1 */
/* Post ![:x].isEmpty()    */
rewrite_node("simplify_code_using_collection_isempty", id, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_or_equals_expression(id, invocation, integer),
    method_invocation(invocation, subject, "length", nil),
    _has_type(subject, ["java.lang", "String", nil]),
    evaluates_to_integer_value(integer, 1),
    string_representation(subject, subject_str).
