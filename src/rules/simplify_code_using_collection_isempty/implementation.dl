/**
 * Collection.isEmpty() should be used to test for emptiness
 * https://rules.sonarsource.com/java/RSPEC-1155
 */

/* Collections */

/* Pre  [:x].size() == 0 */
/* Post [:x].isEmpty()   */
rewrite("S1155", filename, start, end, cat(subject_str, ".isEmpty()")) :-
    equals_expression_unordered(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "size", nil),
    has_collection_type(subject),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].size() != 0 */
/* Post ![:x].isEmpty()  */
rewrite("S1155", filename, start, end, cat("!", subject_str, ".isEmpty()")) :-
    not_equals_expression_unordered(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "size", nil),
    has_collection_type(subject),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].size() > 0 */
/* Post ![:x].isEmpty()  */
rewrite("S1155", filename, start, end, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_expression(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "size", nil),
    has_collection_type(subject),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].size() >= 1 */
/* Post ![:x].isEmpty()  */
rewrite("S1155", filename, start, end, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_or_equals_expression(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "size", nil),
    has_collection_type(subject),
    evaluates_to_integer_value(integer, 1),
    string_representation(subject, subject_str).

/* Strings */

/* Pre  [:x].length() == 0 */
/* Post [:x].isEmpty()     */
rewrite("S1155", filename, start, end, cat(subject_str, ".isEmpty()")) :-
    equals_expression_unordered(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "length", nil),
    has_string_type(subject),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].length() != 0 */
/* Post ![:x].isEmpty()    */
rewrite("S1155", filename, start, end, cat("!", subject_str, ".isEmpty()")) :-
    not_equals_expression_unordered(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "length", nil),
    has_string_type(subject),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].length() > 0 */
/* Post ![:x].isEmpty()   */
rewrite("S1155", filename, start, end, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_expression(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "length", nil),
    has_string_type(subject),
    evaluates_to_integer_value(integer, 0),
    string_representation(subject, subject_str).

/* Pre  [:x].length() >= 1 */
/* Post ![:x].isEmpty()    */
rewrite("S1155", filename, start, end, cat("!", subject_str, ".isEmpty()")) :-
    greater_than_or_equals_expression(parent, invocation, integer),
        filename_of(parent, filename),
        starts_at(parent, start),
        ends_at(parent, end),
    method_invocation(invocation, subject, "length", nil),
    has_string_type(subject),
    evaluates_to_integer_value(integer, 1),
    string_representation(subject, subject_str).
