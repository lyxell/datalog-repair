.decl does_nothing_but_return_true(id: id)
does_nothing_but_return_true(id) :-
    return_statement(id, ret),
    evaluates_to_boolean_value(ret, 1).
does_nothing_but_return_true(id) :-
    block(id, [statement, nil]),
    does_nothing_but_return_true(statement).

.decl does_nothing_but_return_false(id: id)
does_nothing_but_return_false(id) :-
    return_statement(id, ret),
    evaluates_to_boolean_value(ret, 0).
does_nothing_but_return_false(id) :-
    block(id, [statement, nil]),
    does_nothing_but_return_false(statement).

replace_node_with_string("simplify_return_of_boolean_expressions", id,
    cat("return ", @node_to_string(code, cond), ";")
) :-
    if_statement(id, cond, then, else),
    source_code(_, code),
    does_nothing_but_return_true(then),
    does_nothing_but_return_false(else),
    /* id is not the else-branch of an if-statement */
    ! if_statement(_, _, _, id).

replace_node_with_string("simplify_return_of_boolean_expressions", id,
    cat("return !(", @node_to_string(code, cond), ");")
) :-
    if_statement(id, cond, then, else),
    source_code(_, code),
    does_nothing_but_return_false(then),
    does_nothing_but_return_true(else),
    /* id is not the else-branch of an if-statement */
    ! if_statement(_, _, _, id).
