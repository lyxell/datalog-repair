.decl imports_start_at(n: number)
imports_start_at(start) :-
    ordinary_compilation_unit(_, _, [imp_decl, _], _),
    starts_at(imp_decl, start).
imports_start_at(start) :-
    ordinary_compilation_unit(_, _, nil, [t_decl, _]),
    starts_at(t_decl, start).

/* Auto-import */
rewrite("remove_use_of_fully_qualified_names", filename, start, start, "import java.util.stream.Collectors;\n") :-
    expression_name(expr_name, _),
        filename_of(expr_name, filename),
    imports_start_at(start),
    source_code(_, code),
    !import_specification(_, "java.util.stream", "Collectors"),
    @node_to_string(code, expr_name) = "java.util.stream.Collectors".

replace_node_with_node("remove_use_of_fully_qualified_names", id, ident) :-
    expression_name(id, list),
    list_last_element(list, ident),
    identifier(ident, class_name),
    source_code(_, code),
    import_specification(_, package, class_name),
    native_type(package, class_name),
    @node_to_string(code, id) = cat(package, ".", class_name).

