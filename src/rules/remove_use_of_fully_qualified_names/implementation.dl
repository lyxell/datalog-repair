.decl imported_strings(str: symbol)
imported_strings(str) :-
    import_specification(spec, _, _),
    string_representation(spec, str).

.decl imports_start_at(n: number)
imports_start_at(start) :-
    ordinary_compilation_unit(_, _, [imp_decl, _], _),
    starts_at(imp_decl, start).
imports_start_at(start) :-
    ordinary_compilation_unit(_, _, nil, [t_decl, _]),
    starts_at(t_decl, start).

rewrite("remove_use_of_fully_qualified_names", filename, start, start, "import java.util.stream.Collectors;\n") :-
    expression_name(id, _),
        filename_of(id, filename),
    imports_start_at(start),
    !imported_strings("java.util.stream.Collectors"),
    string_representation(id, "java.util.stream.Collectors").

rewrite("remove_use_of_fully_qualified_names", filename, start, end, "Collectors") :-
    expression_name(id, _),
        filename_of(id, filename),
        starts_at(id, start),
        ends_at(id, end),
    imported_strings("java.util.stream.Collectors"),
    string_representation(id, "java.util.stream.Collectors").

