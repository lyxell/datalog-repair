.decl loop(loop: id, body: id)
loop(id, body) :-
    for_statement(id, _, _, _, body).
loop(id, body) :-
    do_statement(id, _, body).
loop(id, body) :-
    while_statement(id, _, body).
loop(id, body) :-
    enhanced_for_statement(id, _, _, body).

.decl inside_loop(id: id)
inside_loop(body) :-
    loop(_, body).
inside_loop(child) :-
    inside_loop(id),
    parent_of(id, _, child).
inside_loop(child) :-
    inside_loop(id),
    parent_of_list(id, _, children),
    list_contains(children, child).

/* Pre  [:x] = [:y] */
/* Post             */
replace_node_with_string("remove_unused_assignments", id, "") :-
    assignment_expression(id, lhs, _),
    starts_at(id, start),
    point_of_declaration(lhs, declaration),
    local_variable_declaration(declaration, _, _, _),
    ! inside_loop(id),
    start = max z : { point_of_declaration(other_id, declaration), starts_at(other_id, z) }.
